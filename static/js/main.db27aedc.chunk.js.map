{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","onBlur","NewMovie","onAdd","count","setCount","setTitle","hasTitleError","setHasTitleError","setDescription","setImgUrl","hasImgUrError","setHasImgUrError","setImdbUrl","hasImdbUrlError","setHasImdbUrlError","setImdbId","hasImdbIdError","setHasImdbIdError","reset","onSubmit","event","preventDefault","tirmmedTitle","trim","tirmmedImbId","tirmmedImbdUrl","tirmmedImg","onReset","target","disabled","App","React","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db27aedc.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props<T = string> = {\n  name: string,\n  value: T,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: ((movie: Movie) => void);\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [hasImgUrError, setHasImgUrError] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [hasImdbUrlError, setHasImdbUrlError] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [hasImdbIdError, setHasImdbIdError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n\n    setHasTitleError(false);\n    setHasImgUrError(false);\n    setHasImdbUrlError(false);\n    setHasImdbIdError(false);\n  };\n\n  const handlSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const tirmmedTitle = title.trim();\n    const tirmmedImbId = imdbId.trim();\n    const tirmmedImbdUrl = imdbUrl.trim();\n    const tirmmedImg = imgUrl.trim();\n\n    setHasTitleError(!tirmmedTitle);\n    setHasImdbIdError(!tirmmedImbId);\n    setHasImdbUrlError(!tirmmedImbdUrl);\n    setHasImgUrError(!tirmmedImg);\n\n    if (!tirmmedTitle || !tirmmedImbId || !tirmmedImbdUrl || !tirmmedImg) {\n      return;\n    }\n\n    onAdd({\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    });\n\n    setCount(count + 1);\n\n    reset();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handlSubmit}\n      onReset={reset}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        required={hasTitleError}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => setImgUrl(event.target.value)}\n        required={hasImgUrError}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(event) => setImdbUrl(event.target.value)}\n        required={hasImdbUrlError}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(event) => setImdbId(event.target.value)}\n        required={hasImdbIdError}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!title || !imdbId || !imdbUrl || !imgUrl}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = React.useState(moviesFromServer);\n\n  const handelChoosMovie = (newMovie: Movie) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    setMovies((currentMovies) => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handelChoosMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}